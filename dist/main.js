/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("const searchForm = document.querySelector('.search-form');\nconst searchResultDiv = document.querySelector('.search-result');\nconst container = document.querySelector('.container');\nconst appId = '9571bf1b';\nconst appKey = 'fd421218cb6bedd9fe774a93dd05e16e';\nsearchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  let searchParams = getSearchParams(e.target);\n  fetchAPI(searchParams);\n});\nasync function fetchAPI(searchParams) {\n  let queryParameters = {\n    q: searchParams.searchQuery.length > 0 ? searchParams.searchQuery : undefined,\n    time: searchParams.minTime && searchParams.maxTime ? `${searchParams.minTime}-${searchParams.maxTime}` : searchParams.minTime ? `${searchParams.minTime}+` : searchParams.maxTime ? `${searchParams.maxTime}` : undefined,\n    calories: searchParams.minCalories && searchParams.maxCalories ? `${searchParams.minCalories}-${searchParams.maxCalories}` : searchParams.minCalories ? `${searchParams.minCalories}+` : searchParams.maxCalories ? `${searchParams.maxCalories}` : undefined,\n    'nutrients[CHOCDF]': searchParams.minCarbs ? `${searchParams.minCarbs}-${searchParams.maxCarbs || '*'}` : searchParams.maxCarbs ? `*-${searchParams.maxCarbs}` : undefined,\n    'nutrients[FAT]': searchParams.minFat ? `${searchParams.minFat}-${searchParams.maxFat || '*'}` : searchParams.maxFat ? `*-${searchParams.maxFat}` : undefined,\n    'nutrients[PROCNT]': searchParams.minProtein ? `${searchParams.minProtein}-${searchParams.maxProtein || '*'}` : searchParams.maxProtein ? `*-${searchParams.maxProtein}` : undefined,\n    mealType: searchParams.mealType || undefined,\n    cuisineType: searchParams.cuisine || undefined,\n    diet: searchParams.dietRestrictions.length > 0 ? searchParams.dietRestrictions.join(',') : undefined,\n    excluded: searchParams.excludedIngredients.length > 0 ? searchParams.excludedIngredients : undefined\n  };\n  console.log(\"queryParameters\", queryParameters);\n  let baseURL = `http://localhost:5001?url=https://api.edamam.com/api/recipes/v2`;\n  let fullURL = Object.keys(queryParameters).filter(key => queryParameters[key] !== undefined).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(queryParameters[key])).join('&');\n  console.log(\"fullURL: \", fullURL);\n  baseURL = `${baseURL}?${fullURL}&random=true&app_id=${appId}&app_key=${appKey}`;\n  console.log(\"baseURL: \", baseURL);\n  const response = await fetch(baseURL);\n  const data = await response.json();\n  generateHTML(data.hits);\n}\nfunction getSearchParams(form) {\n  let searchQuery = document.querySelector('input[type=\"text\"]').value;\n  let minTime = document.querySelector('#min-time-input').value;\n  console.log(\"minTime: \", minTime);\n  let maxTime = document.querySelector('#max-time-input').value;\n  let minCalories = document.querySelector('#min-calories-input').value;\n  let maxCalories = document.querySelector('#max-calories-input').value;\n  let minCarbs = document.querySelector('#min-carbs-input').value;\n  let maxCarbs = document.querySelector('#max-carbs-input').value;\n  let minFat = document.querySelector('#min-fat-input').value;\n  let maxFat = document.querySelector('#max-fat-input').value;\n  let minProtein = document.querySelector('#min-protein-input').value;\n  let maxProtein = document.querySelector('#max-protein-input').value;\n  let mealType = document.querySelector('.meal-type-input').value;\n  let cuisineType = document.querySelector('.cuisine-input').value;\n  let dietRestrictions = Array.from(document.querySelectorAll('.dietary-restrictions input[type=\"checkbox\"]:checked')).map(el => el.value) || [];\n  let excludedIngredients = document.querySelector('.ingredient-search-field').querySelector('input[type=\"text\"]').value.split(',').map(item => item.trim()).filter(item => item.length > 0) || [];\n  return {\n    searchQuery,\n    minTime,\n    maxTime,\n    minCalories,\n    maxCalories,\n    minCarbs,\n    maxCarbs,\n    minFat,\n    maxFat,\n    minProtein,\n    maxProtein,\n    mealType,\n    cuisineType,\n    dietRestrictions,\n    excludedIngredients\n  };\n}\nfunction generateHTML(results) {\n  let newHTML = '';\n  results.map(result => {\n    newHTML += `\n            <div class=\"item\">\n                <img src=\"${result.recipe.image}\" alt=\"\">\n\n                <div class=\"flex-container\">\n                    <h1 class=\"title\">${result.recipe.label}</h1>\n                    <a class=\"modify-button\" href=\"${result.recipe.url}\" target=\"_blank\">Modify Recipe</a>\n                </div>\n                    \n                <p class=\"item-data\">\n                    Calories: ${result.recipe.calories.toFixed(0)}\n                </p>\n                <p class=\"item-data\">\n                    Macronutrients: ${result.recipe.totalNutrients.CHOCDF.quantity.toFixed(0)}g carbohydrates, ${result.recipe.totalNutrients.PROCNT.quantity.toFixed(0)}g protein, ${result.recipe.totalNutrients.FAT.quantity.toFixed(0)}g fat\n                </p>\n                <p class=\"item-data\">\n                    Servings: ${result.recipe.yield.toFixed(0)}\n                </p>\n            </div>\n        `;\n  });\n  searchResultDiv.innerHTML = newHTML;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;