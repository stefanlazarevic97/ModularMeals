{"version":3,"file":"main.js","mappings":"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","sources":["webpack://javascript-project/webpack/bootstrap","webpack://javascript-project/webpack/runtime/define property getters","webpack://javascript-project/webpack/runtime/hasOwnProperty shorthand","webpack://javascript-project/./src/scripts/pie-chart.js","webpack://javascript-project/./src/scripts/bar-chart.js","webpack://javascript-project/./src/scripts/util.js","webpack://javascript-project/./src/scripts/maps.js","webpack://javascript-project/./src/scripts/nutrition.js","webpack://javascript-project/./src/scripts/generate-recipes.js","webpack://javascript-project/./src/index.js","webpack://javascript-project/./src/scripts/search-params.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export function drawPieChart(svg, data, width, height, nutritionObj) {\n    svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", 10)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"fill\", \"#093527\");\n\n    var radius = Math.min(width, height) / 2;\n\n    var color = d3.scaleOrdinal()\n        .domain(data.map(d => d.name))\n        .range([\"#7CC0AB\", \"#458F77\", \"#244C3F\"]);\n\n    var pie = d3.pie()\n        .value(d => d.value)\n        .sort(null);\n\n    var arc = d3.arc()\n        .innerRadius(0)\n        .outerRadius(radius);\n\n    var labelArc = d3.arc()\n        .outerRadius(radius * 0.6)\n        .innerRadius(radius * 0.6);\n\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    var arcs = g.selectAll(\".arc\")\n        .data(pie(data))\n        .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    arcs.append(\"path\")\n        .style(\"fill\", d => color(d.data.name))\n        .transition()\n        .delay((d, i) => i * 500)\n        .duration(500)\n        .attrTween('d', function (d) {\n            var i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\n            return function (t) {\n                d.endAngle = i(t);\n                return arc(d);\n            }\n        });\n\n    arcs.each(function (d) {\n        var label = d3.select(this).append(\"text\")\n            .attr(\"transform\", d => \"translate(\" + labelArc.centroid(d) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", \"12px\")\n            .style(\"fill\", d.data.name === 'Carbohydrates' ? \"#EAF5F2\" : \"#093527\");\n        var name = d.data.name + ': ' + parseFloat(d.data.value).toFixed(0) + ' g',\n            additional = [];\n\n        if (d.data.name === 'Carbohydrates') {\n            if (!isNaN(nutritionObj.Fiber)) additional.push('Fiber: ' + parseFloat(nutritionObj.Fiber).toFixed(0) + ' g');\n            if (!isNaN(nutritionObj.Sugar)) additional.push('Sugar: ' + parseFloat(nutritionObj.Sugar).toFixed(0) + ' g');\n        } else if (d.data.name === 'Fat') {\n            if (!isNaN(nutritionObj.Saturated)) additional.push('Saturated Fat: ' + parseFloat(nutritionObj.Saturated).toFixed(0) + ' g');\n            if (!isNaN(nutritionObj.Trans)) additional.push('Trans Fat: ' + parseFloat(nutritionObj.Trans).toFixed(0) + ' g');\n        }\n\n        label.append(\"tspan\")\n            .style(\"font-weight\", \"bold\")\n            .attr(\"dy\", \"0.6em\")\n            .text(name);\n\n        additional.forEach(function (add, i) {\n            var addColor = \"#093527\";\n            if (d.data.name === 'Carbohydrates' && (add.includes('Fiber') || add.includes('Sugar'))) {\n                addColor = \"#EAF5F2\";\n            }\n            label.append(\"tspan\")\n                .attr(\"x\", 0)\n                .attr(\"dy\", \"1.2em\")\n                .style(\"font-weight\", \"normal\")\n                .style(\"fill\", addColor)\n                .text(add);\n        });\n    });\n}\n","export function drawBarChart(svg, data, width, height) {\n    svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", 20)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"font-weight\", \"bold\");\n\n    var margin = { top: 20, right: 20, bottom: 70, left: 60 },\n        width = width - margin.left - margin.right,\n        height = height - margin.top - margin.bottom;\n\n    data = data.filter(d => !isNaN(parseFloat(d.value)));\n\n    var x = d3.scaleBand()\n        .range([0, width])\n        .padding(0.1)\n        .domain(data.map(d => d.name));\n\n    var y = d3.scaleLinear()\n        .range([height, 0])\n        .domain([0, d3.max(data, d => parseFloat(d.value))]);\n\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    g.append(\"g\")\n        .call(d3.axisLeft(y))\n        .append(\"text\")\n        .attr(\"fill\", \"#244C3F\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -margin.left + 10)\n        .attr(\"dy\", \"1em\")\n        .attr(\"text-anchor\", \"end\")\n        .style(\"font-weight\", \"bold\")\n        .text(\"% of recommended daily intake\");\n\n    g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"fill\", \"#244C3F\")\n        .attr(\"dx\", \"-.8em\")\n        .attr(\"dy\", \".15em\")\n        .attr(\"transform\", \"rotate(-45)\");\n\n    g.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", d => x(d.name))\n        .attr(\"y\", height)\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", 0)\n        .attr(\"fill\", \"#244C3F\")\n        .transition()\n        .duration(1000)\n        .attr(\"y\", d => y(parseFloat(d.value)))\n        .attr(\"height\", d => height - y(parseFloat(d.value)));\n}\n","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}","export const RDI = {\n    'Cholesterol': 300,\n    'Sodium': 2300,\n    'Potassium': 4700,\n    'Magnesium': 420,\n    'Calcium': 1000,\n    'Iron': 18,\n    'Zinc': 11,\n    'VitaminA': 900,\n    'VitaminE': 15,\n    'VitaminC': 90,\n    'VitaminB6': 1.7,\n    'VitaminB12': 2.4,\n    'VitaminD': 20,\n    'VitaminK': 120\n}\n\nexport const nutrientMappingAbsolute = {\n    'ENERC_KCAL': 'Calories',\n    'PROCNT': 'Protein',\n    'FAT': 'Fat',\n    'FASAT': 'Saturated Fat',\n    'FATRN': 'Trans Fat',\n    'CHOCDF': 'Carbohydrates',\n    'SUGAR': 'Sugar',\n    'FIBTG': 'Fiber',\n}\n\nexport const nutrientMappingPercentage = {\n    'CA': 'Calcium',\n    'CHOLE': 'Cholesterol',\n    'FE': 'Iron',\n    'K': 'Potassium',\n    'MG': 'Magnesium',\n    'NA': 'Sodium',\n    'TOCPHA': 'Vitamin E',\n    'VITA_RAE': 'Vitamin A',\n    'VITB6A': 'Vitamin B6',\n    'VITB12': 'Vitamin B12',\n    'VITC': 'Vitamin C',\n    'VITD': 'Vitamin D',\n    'VITK1': 'Vitamin K',\n    'ZN': 'Zinc'\n}","import * as maps from \"./maps.js\";\n\nexport function getNutritionalInformation(recipe) {\n    let ingredientObj = {};\n\n    recipe.ingredients.forEach(ingredient => {\n        ingredientObj[ingredient.food] = ingredient.weight;\n    });\n\n    return ingredientObj;\n}\n\nexport function createNutritionObject(recipe, RDI) {\n    let servings = recipe.yield;\n\n    return {\n        'Calories': (recipe.calories / servings).toFixed(0),\n        'Protein': (recipe.totalNutrients.PROCNT.quantity / servings).toFixed(0),\n        'Fat': (recipe.totalNutrients.FAT.quantity / servings).toFixed(0),\n        'Saturated': (recipe.totalNutrients.FASAT.quantity / servings).toFixed(0),\n        'Trans': (recipe.totalNutrients.FATRN.quantity / servings).toFixed(0),\n        'Carbohydrates': (recipe.totalNutrients.CHOCDF.quantity / servings).toFixed(0),\n        'Sugar': (recipe.totalNutrients.SUGAR.quantity / servings).toFixed(0),\n        'Fiber': (recipe.totalNutrients.FIBTG.quantity / servings).toFixed(0),\n        'Cholesterol': ((recipe.totalNutrients.CHOLE.quantity / maps.RDI.Cholesterol / servings) * 100).toFixed(0),\n        'Sodium': ((recipe.totalNutrients.NA.quantity / maps.RDI.Sodium / servings) * 100).toFixed(0),\n        'Potassium': ((recipe.totalNutrients.K.quantity / maps.RDI.Potassium / servings) * 100).toFixed(0),\n        'Magnesium': ((recipe.totalNutrients.MG.quantity / maps.RDI.Magnesium / servings) * 100).toFixed(0),\n        'Vitamin A': ((recipe.totalNutrients.VITA_RAE.quantity / maps.RDI.VitaminA / servings) * 100).toFixed(0),\n        'Vitamin E': ((recipe.totalNutrients.TOCPHA.quantity / maps.RDI.VitaminE / servings) * 100).toFixed(0),\n        'Vitamin C': ((recipe.totalNutrients.VITC.quantity / maps.RDI.VitaminC / servings) * 100).toFixed(0),\n        'Vitamin B6': ((recipe.totalNutrients.VITB6A.quantity / maps.RDI.VitaminB6 / servings) * 100).toFixed(0),\n        'Vitamin B12': ((recipe.totalNutrients.VITB12.quantity / maps.RDI.VitaminB12 / servings) * 100).toFixed(0),\n        'Vitamin D': ((recipe.totalNutrients.VITD.quantity / maps.RDI.VitaminD / servings) * 100).toFixed(0),\n        'Vitamin K': ((recipe.totalNutrients.VITK1.quantity / maps.RDI.VitaminK / servings) * 100).toFixed(0),\n        'Calcium': ((recipe.totalNutrients.CA.quantity / maps.RDI.Calcium / servings) * 100).toFixed(0),\n        'Iron': ((recipe.totalNutrients.FE.quantity / maps.RDI.Iron / servings) * 100).toFixed(0),\n        'Zinc': ((recipe.totalNutrients.ZN.quantity / maps.RDI.Zinc / servings) * 100).toFixed(0)\n    };\n}\n\nexport function subtractNutrition(nutritionObj, ingredientData, RDI, servings) {\n    let newNutritionObj = { ...nutritionObj };\n\n    Object.keys(ingredientData.totalNutrients).forEach((key) => {\n        if (maps.nutrientMappingPercentage[key] && nutritionObj[maps.nutrientMappingPercentage[key]]) {\n            let ingredientPercentage = (Number(ingredientData.totalNutrients[key].quantity) / servings) / RDI[maps.nutrientMappingPercentage[key]] * 100;\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingPercentage[key]]) - ingredientPercentage;\n            if (newNutrientValue < 0) newNutrientValue = 0;\n            newNutritionObj[maps.nutrientMappingPercentage[key]] = newNutrientValue.toFixed(0);\n        }\n\n        if (maps.nutrientMappingAbsolute[key] && nutritionObj[maps.nutrientMappingAbsolute[key]]) {\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingAbsolute[key]]) - (Number(ingredientData.totalNutrients[key].quantity) / servings);\n            if (newNutrientValue < 0) newNutrientValue = 0;\n            newNutritionObj[maps.nutrientMappingAbsolute[key]] = newNutrientValue.toFixed(0);\n        }\n    });\n\n    return newNutritionObj;\n}\n\nexport function addNutrition(nutritionObj, ingredientData, RDI, servings) {\n    let newNutritionObj = { ...nutritionObj };\n\n    Object.keys(ingredientData.totalNutrients).forEach((key) => {\n        if (maps.nutrientMappingPercentage[key] && nutritionObj[maps.nutrientMappingPercentage[key]]) {\n            let ingredientPercentage = (Number(ingredientData.totalNutrients[key].quantity) / servings) / RDI[maps.nutrientMappingPercentage[key]] * 100;\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingPercentage[key]]) + ingredientPercentage;\n            newNutritionObj[maps.nutrientMappingPercentage[key]] = newNutrientValue.toFixed(0);\n        }\n\n        if (maps.nutrientMappingAbsolute[key] && nutritionObj[maps.nutrientMappingAbsolute[key]]) {\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingAbsolute[key]]) + (Number(ingredientData.totalNutrients[key].quantity) / servings);\n            newNutritionObj[maps.nutrientMappingAbsolute[key]] = newNutrientValue.toFixed(0);\n        }\n    });\n\n    return newNutritionObj;\n}","import { drawPieChart } from \"./pie-chart.js\";\nimport { drawBarChart } from \"./bar-chart.js\";\nimport { capitalizeFirstLetter } from \"./util.js\";\nimport * as maps from \"./maps.js\";\nimport * as nutrition from \"./nutrition.js\";\nimport { fetchAPI } from \"../index.js\";\nimport { lastSearchParams } from \"../index.js\";\n\nconst nutritionId = '0cc0aea0';\nconst nutritionKey = '1e077dc53566f535c8e43010f6e729d5';\nconst searchResultDiv = document.querySelector('.search-result');\n\nexport function generateHTML(results) {\n    let newHTML = '';\n    \n    newHTML += `\n        <button class=\"find-more-recipes-button\">\n            <ion-icon class=\"refresh-icon\" name=\"refresh-outline\"></ion-icon>\n        </button>\n    `;\n\n    results.map((result, index) => {\n        const caloriesPerServing = (result.recipe.calories / result.recipe.yield).toFixed(0);\n        const carbsPerServing = (result.recipe.totalNutrients.CHOCDF.quantity / result.recipe.yield).toFixed(0);\n        const proteinPerServing = (result.recipe.totalNutrients.PROCNT.quantity / result.recipe.yield).toFixed(0);\n        const fatPerServing = (result.recipe.totalNutrients.FAT.quantity / result.recipe.yield).toFixed(0);\n\n        newHTML += `\n            <div class=\"item\">\n                <img src=\"${result.recipe.image}\" alt=\"${result.recipe.label}\">\n                \n                <div class=\"recipe-info\">\n                    <h1 class=\"title\">${result.recipe.label}</h1>\n                    <div class=\"button-container\">\n                        <a class=\"view-recipe-button\" href=\"${result.recipe.url}\" target=\"_blank\">View Recipe</a>\n                        <button class=\"modify-recipe-button\" data-recipe-id=\"${index}\">Modify Recipe</button>\n                    </div>\n                    <div class=\"servings\">Servings: ${result.recipe.yield.toFixed(0)}</div>\n                </div>\n\n                <table class=\"item-data\">\n                    <thead>\n                        <tr>\n                            <th>Nutrient</th>\n                            <th>Value/Serving</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Calories</td>\n                            <td>${caloriesPerServing}</td>\n                        </tr>\n                        <tr>\n                            <td>Carbohydrates</td>\n                            <td>${carbsPerServing}g</td>\n                        </tr>\n                        <tr>\n                            <td>Protein</td>\n                            <td>${proteinPerServing}g</td>\n                        </tr>\n                        <tr>\n                            <td>Fat</td>\n                            <td>${fatPerServing}g</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        `;\n    })\n\n    \n    const oldButton = document.querySelector('.find-more-recipes-button');\n    if (oldButton) {\n        oldButton.remove();\n    }\n\n    searchResultDiv.innerHTML = newHTML;\n\n    document.querySelector('.find-more-recipes-button').addEventListener('click', () => fetchAPI(lastSearchParams, true));\n    document.querySelector('.search-form').style.display = 'none';\n    document.querySelector('.back-to-search').classList.remove('hidden')\n    document.querySelector('.back-to-search').classList.add('visible');\n    document.querySelector('.back-to-search').removeAttribute('disabled');\n    \n    document.querySelectorAll('.modify-recipe-button').forEach((button) => {\n        button.addEventListener('click', async (event) => {\n            const recipeId = event.target.dataset.recipeId;\n            const selectedRecipe = results[recipeId].recipe;\n\n            searchResultDiv.innerHTML = '';\n            searchResultDiv.style.display = 'none';\n\n            var searchForm = document.querySelector('.search-form');\n            searchForm.innerHTML = '';\n\n            let ingredientObj = nutrition.getNutritionalInformation(selectedRecipe);\n            let nutritionObj = nutrition.createNutritionObject(selectedRecipe, maps.RDI);\n\n            var pieChartDiv = document.querySelector('.pie-chart');\n            var barChartDiv = document.querySelector('.bar-chart');   \n            document.querySelector('.pie-chart').style.display = 'block';\n            document.querySelector('.bar-chart').style.display = 'block';\n            \n            var ingredientsDiv = document.querySelector('.ingredients-list');\n            ingredientsDiv.innerHTML = '';\n            \n            var caloriesDiv = document.querySelector('.calories');         \n            caloriesDiv.innerHTML = `Calories per Serving: ${nutritionObj.Calories}`;\n            \n            let tableHTML = `\n                <a class=\"view-selected-recipe-button\" href=\"${selectedRecipe.url}\" target=\"_blank\">${selectedRecipe.label}</a>\n            `\n\n            tableHTML += `\n                <table>\n                    <tr>\n                        <th>Ingredient</th>\n                        <th>Weight (g)</th>\n                        <th>Actions</th>\n                    </tr>\n                `;\n\n            Object.entries(ingredientObj).forEach(([ingredient, weight]) => {\n                tableHTML += `\n                    <tr>\n                        <td>${capitalizeFirstLetter(ingredient)}</td>\n                        <td>${Math.floor(weight)}</td>\n                        <td>\n                            <button class=\"remove-button\">Remove Ingredient</button>\n                        </td>\n                    </tr>\n                `;\n            });\n\n            tableHTML += `\n                </table>\n                <div class=\"add-ingredient-div\">\n                    <input type=\"text\" class=\"ingredient-input\" placeholder=\"Enter ingredient\">\n                    <input type=\"number\" class=\"weight-input\" placeholder=\"Enter weight in grams\">\n                    <button class=\"add-button\">Add Ingredient</button>\n                </div>\n            `;\n\n            ingredientsDiv.innerHTML = tableHTML;\n\n            const nutrientsData = Object.keys(nutritionObj).map(key => ({ name: key, value: nutritionObj[key] }));\n            \n            const width = 300;\n            const height = 300;\n\n            let svgPie = d3.create(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n\n            var macronutrients = ['Protein', 'Fat', 'Carbohydrates'];\n            drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n            pieChartDiv.append(svgPie.node());\n                        \n            let svgBar = d3.create(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n            var micronutrients = ['Cholesterol', 'Sodium', 'Potassium', 'Magnesium', 'Calcium', 'Iron', 'Zinc', 'VitaminA', 'VitaminE', 'VitaminC', 'VitaminB6', 'VitaminB12', 'VitaminD', 'VitaminK'];\n            drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n            barChartDiv.append(svgBar.node());\n\n            document.querySelectorAll('.remove-button').forEach(button => {\n                button.addEventListener('click', async function (e) {\n                    const ingredient = e.target.parentElement.parentElement.children[0].textContent;\n                    const weight = e.target.parentElement.parentElement.children[1].textContent;\n                    const response = await fetch(`https://api.edamam.com/api/nutrition-data?app_id=${nutritionId}&app_key=${nutritionKey}&nutrition-type=cooking&ingr=${ingredient}-${weight}g`);\n                    const data = await response.json();\n                    nutritionObj = nutrition.subtractNutrition(nutritionObj, data, maps.RDI, selectedRecipe.yield);\n                    caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n\n                    svgPie.selectAll(\"*\").remove();\n                    drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                    svgBar.selectAll(\"*\").remove();\n                    drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                    e.target.parentElement.parentElement.remove();\n                });\n            });\n\n            document.querySelector('.add-button').addEventListener('click', async () => {\n                const ingredientInput = document.querySelector('.ingredient-input').value;\n                const weightInput = document.querySelector('.weight-input').value;\n\n                if (!ingredientInput || !weightInput) {\n                    alert(\"Please fill both ingredient and weight fields.\");\n                    return;\n                }\n\n                const response = await fetch(`https://api.edamam.com/api/nutrition-data?app_id=${nutritionId}&app_key=${nutritionKey}&nutrition-type=cooking&ingr=${ingredientInput}-${weightInput}g`);\n                const data = await response.json();\n\n                nutritionObj = nutrition.addNutrition(nutritionObj, data, maps.RDI, selectedRecipe.yield);\n\n                const newTableRow = document.createElement('tr');\n                \n                newTableRow.innerHTML = `\n                    <td>${capitalizeFirstLetter(ingredientInput)}</td>\n                    <td>${Math.floor(weightInput)}</td>\n                    <td>\n                        <button class=\"remove-button\">Remove Ingredient</button>\n                    </td>\n                `;\n\n                document.querySelector('table').appendChild(newTableRow);\n\n                caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n\n                svgPie.selectAll(\"*\").remove();\n                drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                svgBar.selectAll(\"*\").remove();\n                drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                document.querySelectorAll('.remove-button').forEach(button => {\n                    button.addEventListener('click', async function (e) {\n                        const ingredient = e.target.parentElement.parentElement.children[0].textContent;\n                        const weight = e.target.parentElement.parentElement.children[1].textContent;\n                        const response = await fetch(`https://api.edamam.com/api/nutrition-data?app_id=${nutritionId}&app_key=${nutritionKey}&nutrition-type=cooking&ingr=${ingredient}-${weight}g`);\n                        const data = await response.json();\n\n                        nutritionObj = nutrition.subtractNutrition(nutritionObj, data, maps.RDI, selectedRecipe.yield);\n\n                        caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n\n                        svgPie.selectAll(\"*\").remove();\n                        drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                        svgBar.selectAll(\"*\").remove();\n                        drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                        e.target.parentElement.parentElement.remove();\n                    });\n                });\n            });\n        });\n    });\n}","import * as generate from \"./scripts/generate-recipes.js\";\nimport { getSearchParams } from \"./scripts/search-params.js\";\nimport { capitalizeFirstLetter } from \"./scripts/util.js\";\n\nconst searchForm = document.querySelector('.search-form');\nconst appId = '9571bf1b';\nconst appKey = 'fd421218cb6bedd9fe774a93dd05e16e';\nexport let lastSearchParams;\nexport let recipes = [];\n\nsearchForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    lastSearchParams = getSearchParams(e.target);\n    fetchAPI(lastSearchParams, false);\n})\n\nexport async function fetchAPI(searchParams, append) {\n    let queryParameters = {\n        q: searchParams.searchQuery.length > 0 ? searchParams.searchQuery : undefined,\n        time: searchParams.minTime && searchParams.maxTime ? `${searchParams.minTime}-${searchParams.maxTime}`\n            : searchParams.minTime ? `${parseFloat(searchParams.minTime)}+`\n            : searchParams.maxTime ? `${searchParams.maxTime}`\n            : undefined,\n        calories: searchParams.minCalories && searchParams.maxCalories ? `${searchParams.minCalories}-${searchParams.maxCalories}`\n            : searchParams.minCalories ? `${searchParams.minCalories}+`\n            : searchParams.maxCalories ? `${searchParams.maxCalories}`\n            : undefined,\n        'nutrients[CHOCDF]': searchParams.minCarbs && searchParams.maxCarbs ? `${searchParams.minCarbs}-${searchParams.maxCarbs}`\n            : searchParams.minCarbs ? `${searchParams.minCarbs}+`\n            : searchParams.maxCarbs ? `${searchParams.maxCarbs}`\n            : undefined,\n        'nutrients[FAT]': searchParams.minFat && searchParams.maxFat ? `${searchParams.minFat}-${searchParams.maxFat}`\n            : searchParams.minFat ? `${searchParams.minFat}+`\n            : searchParams.maxFat ? `${searchParams.maxFat}`\n            : undefined,\n        'nutrients[PROCNT]': searchParams.minProtein && searchParams.maxProtein ? `${searchParams.minProtein}-${searchParams.maxProtein}`\n            : searchParams.minProtein ? `${searchParams.minProtein}+`\n            : searchParams.maxProtein ? `${searchParams.maxProtein}`\n            : undefined,\n        health: searchParams.dietRestrictions.length > 0 ? searchParams.dietRestrictions : undefined,\n        cuisineType: searchParams.cuisineType ? capitalizeFirstLetter(searchParams.cuisineType) : undefined,\n        mealType: searchParams.mealType || undefined,\n        excluded: searchParams.excludedIngredients.length > 0 ? searchParams.excludedIngredients : undefined\n    }\n\n    let searchURL = Object.keys(queryParameters)\n        .filter(key => queryParameters[key] !== undefined)\n        .flatMap(key => {\n            if (Array.isArray(queryParameters[key])) {\n                return queryParameters[key].map(value => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n            } else {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(queryParameters[key])}`;\n            }\n        })\n        .join('&');\n\n    let fullURL = `https://api.edamam.com/api/recipes/v2?type=public&app_id=${appId}&app_key=${appKey}&${searchURL}&random=true`;\n\n    const response = await fetch(fullURL);\n    const data = await response.json();\n\n    if (append) {\n        recipes = recipes.concat(data.hits.filter(recipe => recipe.recipe.image));\n    } else {\n        recipes = data.hits.filter(recipe => recipe.recipe.image);\n    }\n\n    generate.generateHTML(data.hits);\n}\n\nconst backButton = document.querySelector('.back-to-search');\n\nbackButton.addEventListener('click', () => {\n    location.reload();\n});\n\nvar modal = document.querySelector(\".modal\");\nvar btn = document.querySelector(\".instructions-button\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nbtn.onclick = function () {\n    modal.style.display = \"block\";\n}\n\nspan.onclick = function () {\n    modal.style.display = \"none\";\n}\n\nwindow.onclick = function (event) {\n    if (event.target == modal) {\n        modal.style.display = \"none\";\n    }\n}","export function getSearchParams(form) {\n    let searchQuery = document.querySelector('input[type=\"text\"]').value;\n    let minTime = document.querySelector('#min-time-input').value;\n    let maxTime = document.querySelector('#max-time-input').value;\n    let minCalories = document.querySelector('#min-calories-input').value;\n    let maxCalories = document.querySelector('#max-calories-input').value;\n    let minCarbs = document.querySelector('#min-carbs-input').value;\n    let maxCarbs = document.querySelector('#max-carbs-input').value;\n    let minFat = document.querySelector('#min-fat-input').value;\n    let maxFat = document.querySelector('#max-fat-input').value;\n    let minProtein = document.querySelector('#min-protein-input').value;\n    let maxProtein = document.querySelector('#max-protein-input').value;\n    let mealType = document.querySelector('.meal-type-input').value;\n    let cuisineType = document.querySelector('.cuisine-input').value;\n    let dietRestrictions = Array.from(document.querySelectorAll('.dietary-restrictions input[type=\"checkbox\"]:checked')).map(el => el.value) || [];\n    let excludedIngredients = (document.querySelector('.ingredient-search-field').querySelector('input[type=\"text\"]').value.split(',').map(item => item.trim())).filter(item => item.length > 0) || [];\n\n    return {\n        searchQuery, minTime, maxTime, minCalories, maxCalories, minCarbs, maxCarbs, minFat, maxFat, minProtein, maxProtein, mealType, cuisineType, dietRestrictions, excludedIngredients\n    };\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","drawPieChart","svg","data","width","height","nutritionObj","append","attr","style","radius","Math","min","color","d3","scaleOrdinal","domain","map","d","name","range","pie","value","sort","arc","innerRadius","outerRadius","labelArc","arcs","selectAll","enter","transition","delay","i","duration","attrTween","interpolate","startAngle","endAngle","t","each","label","select","this","centroid","parseFloat","toFixed","additional","isNaN","Fiber","push","Sugar","Saturated","Trans","text","forEach","add","addColor","includes","drawBarChart","filter","x","scaleBand","padding","y","scaleLinear","max","g","axisLeft","axisBottom","bandwidth","capitalizeFirstLetter","string","charAt","toUpperCase","slice","RDI","nutrientMappingAbsolute","nutrientMappingPercentage","subtractNutrition","ingredientData","servings","newNutritionObj","keys","totalNutrients","maps","ingredientPercentage","Number","quantity","newNutrientValue","nutritionId","nutritionKey","searchResultDiv","document","querySelector","searchForm","appId","appKey","lastSearchParams","recipes","async","fetchAPI","searchParams","queryParameters","q","searchQuery","length","undefined","time","minTime","maxTime","calories","minCalories","maxCalories","minCarbs","maxCarbs","minFat","maxFat","minProtein","maxProtein","health","dietRestrictions","cuisineType","mealType","excluded","excludedIngredients","searchURL","flatMap","Array","isArray","encodeURIComponent","join","fullURL","response","fetch","json","concat","hits","recipe","image","results","newHTML","result","index","caloriesPerServing","yield","carbsPerServing","CHOCDF","proteinPerServing","PROCNT","fatPerServing","FAT","url","oldButton","remove","innerHTML","addEventListener","display","classList","removeAttribute","querySelectorAll","button","recipeId","event","target","dataset","selectedRecipe","ingredientObj","ingredients","ingredient","food","weight","nutrition","FASAT","FATRN","SUGAR","FIBTG","CHOLE","Cholesterol","NA","Sodium","K","Potassium","MG","Magnesium","VITA_RAE","VitaminA","TOCPHA","VitaminE","VITC","VitaminC","VITB6A","VitaminB6","VITB12","VitaminB12","VITD","VitaminD","VITK1","VitaminK","CA","Calcium","FE","Iron","ZN","Zinc","pieChartDiv","barChartDiv","ingredientsDiv","caloriesDiv","Calories","tableHTML","entries","_ref","floor","svgPie","create","macronutrients","n","node","svgBar","micronutrients","e","parentElement","children","textContent","ingredientInput","weightInput","alert","newTableRow","createElement","appendChild","generate","preventDefault","from","el","split","item","trim","location","reload","modal","btn","span","getElementsByClassName","onclick","window"],"sourceRoot":""}