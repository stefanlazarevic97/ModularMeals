{"version":3,"file":"main.js","mappings":"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","sources":["webpack://javascript-project/webpack/bootstrap","webpack://javascript-project/webpack/runtime/define property getters","webpack://javascript-project/webpack/runtime/hasOwnProperty shorthand","webpack://javascript-project/./src/scripts/pie-chart.js","webpack://javascript-project/./src/scripts/bar-chart.js","webpack://javascript-project/./src/scripts/util.js","webpack://javascript-project/./src/scripts/maps.js","webpack://javascript-project/./src/scripts/nutrition.js","webpack://javascript-project/./src/scripts/generate-recipes.js","webpack://javascript-project/./src/index.js","webpack://javascript-project/./src/scripts/search-params.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export function drawPieChart(svg, data, width, height, nutrientObj) {\n    svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", 10)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"font-weight\", \"bold\")\n        .text(\"Macronutrient Breakdown\");\n    \n    var radius = Math.min(width, height) / 2;\n\n    var color = d3.scaleOrdinal()\n        .domain(data.map(d => d.name))\n        .range(d3.schemeCategory10);\n\n    var pie = d3.pie()\n        .value(d => d.value);\n\n    var arc = d3.arc()\n        .innerRadius(0)\n        .outerRadius(radius);\n\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    var arcs = g.selectAll(\".arc\")\n        .data(pie(data))\n        .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    arcs.append(\"path\")\n        .attr(\"d\", arc)\n        .style(\"fill\", d => color(d.data.name));\n\n    arcs.append(\"text\")\n        .attr(\"transform\", d => \"translate(\" + arc.centroid(d) + \")\")\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(d => d.data.name + ': ' + parseFloat(d.data.value).toFixed(0) + ' g');\n}\n","export function drawBarChart(svg, data, width, height) {\n    svg.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", 20)\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"font-weight\", \"bold\")\n        .text(\"Micronutrient Breakdown\");\n    \n    var margin = { top: 20, right: 20, bottom: 50, left: 60 },\n        width = width - margin.left - margin.right,\n        height = height - margin.top - margin.bottom;\n\n    data = data.filter(d => !isNaN(parseFloat(d.value)));\n\n    var x = d3.scaleBand()\n        .range([0, width])\n        .padding(0.1)\n        .domain(data.map(d => d.name));\n\n    var y = d3.scaleLinear()\n        .range([height, 0])\n        .domain([0, d3.max(data, d => parseFloat(d.value))]);\n\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    g.append(\"g\")\n        .call(d3.axisLeft(y))\n        .append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -margin.left + 10) // move y-axis label outside the axis\n        .attr(\"dy\", \"1em\") // center y-axis label\n        .attr(\"text-anchor\", \"end\")\n        .style(\"font-weight\", \"bold\")\n        .text(\"% of recommended daily intake\");\n\n    g.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))\n        .append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"x\", width / 2) // center x-axis label\n        .attr(\"y\", margin.bottom) // position x-axis label\n        .attr(\"dy\", \"-1em\") // offset x-axis label\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"font-weight\", \"bold\")\n        .text(\"Micronutrients\"); // add x-axis label\n\n    g.selectAll(\".bar\")\n        .data(data)\n        .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", d => x(d.name))\n        .attr(\"y\", d => y(parseFloat(d.value)))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", d => height - y(parseFloat(d.value)))\n        .attr(\"fill\", \"hsl(173, 90%, 15%)\"); \n}\n","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}","export const RDI = {\n    'Cholesterol': 300,\n    'Sodium': 2300,\n    'Potassium': 4700,\n    'Magnesium': 420,\n    'Calcium': 1000,\n    'Iron': 18,\n    'Zinc': 11,\n    'VitaminA': 900,\n    'VitaminE': 15,\n    'VitaminC': 90,\n    'VitaminB6': 1.7,\n    'VitaminB12': 2.4,\n    'VitaminD': 20,\n    'VitaminK': 120\n}\n\nexport const nutrientMappingAbsolute = {\n    'ENERC_KCAL': 'Calories',\n    'PROCNT': 'Protein',\n    'FAT': 'Fat',\n    'FASAT': 'Saturated Fat',\n    'FATRN': 'Trans Fat',\n    'CHOCDF': 'Carbohydrates',\n    'SUGAR': 'Sugar',\n    'FIBTG': 'Fiber',\n}\n\nexport const nutrientMappingPercentage = {\n    'CA': 'Calcium',\n    'CHOLE': 'Cholesterol',\n    'FE': 'Iron',\n    'K': 'Potassium',\n    'MG': 'Magnesium',\n    'NA': 'Sodium',\n    'TOCPHA': 'Vitamin E',\n    'VITA_RAE': 'Vitamin A',\n    'VITB6A': 'Vitamin B6',\n    'VITB12': 'Vitamin B12',\n    'VITC': 'Vitamin C',\n    'VITD': 'Vitamin D',\n    'VITK1': 'Vitamin K',\n    'ZN': 'Zinc'\n}","import * as maps from \"./maps.js\";\n\nexport function getNutritionalInformation(recipe) {\n    let ingredientObj = {};\n\n    recipe.ingredients.forEach(ingredient => {\n        ingredientObj[ingredient.food] = ingredient.weight;\n    });\n\n    return ingredientObj;\n}\n\nexport function createNutritionObject(recipe, RDI) {\n    let servings = recipe.yield;\n\n    return {\n        'Calories': (recipe.calories / servings).toFixed(0),\n        'Protein': (recipe.totalNutrients.PROCNT.quantity / servings).toFixed(0),\n        'Fat': (recipe.totalNutrients.FAT.quantity / servings).toFixed(0),\n        'Saturated Fat': (recipe.totalNutrients.FASAT.quantity / servings).toFixed(0),\n        'Trans Fat': (recipe.totalNutrients.FATRN.quantity / servings).toFixed(0),\n        'Carbohydrates': (recipe.totalNutrients.CHOCDF.quantity / servings).toFixed(0),\n        'Sugar': (recipe.totalNutrients.SUGAR.quantity / servings).toFixed(0),\n        'Fiber': (recipe.totalNutrients.FIBTG.quantity / servings).toFixed(0),\n        'Cholesterol': ((recipe.totalNutrients.CHOLE.quantity / maps.RDI.Cholesterol / servings) * 100).toFixed(0),\n        'Sodium': ((recipe.totalNutrients.NA.quantity / maps.RDI.Sodium / servings) * 100).toFixed(0),\n        'Potassium': ((recipe.totalNutrients.K.quantity / maps.RDI.Potassium / servings) * 100).toFixed(0),\n        'Magnesium': ((recipe.totalNutrients.MG.quantity / maps.RDI.Magnesium / servings) * 100).toFixed(0),\n        'Vitamin A': ((recipe.totalNutrients.VITA_RAE.quantity / maps.RDI.VitaminA / servings) * 100).toFixed(0),\n        'Vitamin E': ((recipe.totalNutrients.TOCPHA.quantity / maps.RDI.VitaminE / servings) * 100).toFixed(0),\n        'Vitamin C': ((recipe.totalNutrients.VITC.quantity / maps.RDI.VitaminC / servings) * 100).toFixed(0),\n        'Vitamin B6': ((recipe.totalNutrients.VITB6A.quantity / maps.RDI.VitaminB6 / servings) * 100).toFixed(0),\n        'Vitamin B12': ((recipe.totalNutrients.VITB12.quantity / maps.RDI.VitaminB12 / servings) * 100).toFixed(0),\n        'Vitamin D': ((recipe.totalNutrients.VITD.quantity / maps.RDI.VitaminD / servings) * 100).toFixed(0),\n        'Vitamin K': ((recipe.totalNutrients.VITK1.quantity / maps.RDI.VitaminK / servings) * 100).toFixed(0),\n        'Calcium': ((recipe.totalNutrients.CA.quantity / maps.RDI.Calcium / servings) * 100).toFixed(0),\n        'Iron': ((recipe.totalNutrients.FE.quantity / maps.RDI.Iron / servings) * 100).toFixed(0),\n        'Zinc': ((recipe.totalNutrients.ZN.quantity / maps.RDI.Zinc / servings) * 100).toFixed(0)\n    };\n}\n\nexport function subtractNutrition(nutritionObj, ingredientData, RDI, servings) {\n    let newNutritionObj = { ...nutritionObj };\n\n    Object.keys(ingredientData.totalNutrients).forEach((key) => {\n        if (maps.nutrientMappingPercentage[key] && nutritionObj[maps.nutrientMappingPercentage[key]]) {\n            let ingredientPercentage = (Number(ingredientData.totalNutrients[key].quantity) / servings) / RDI[maps.nutrientMappingPercentage[key]] * 100;\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingPercentage[key]]) - ingredientPercentage;\n            if (newNutrientValue < 0) newNutrientValue = 0;\n            newNutritionObj[maps.nutrientMappingPercentage[key]] = newNutrientValue.toFixed(0);\n        }\n\n        if (maps.nutrientMappingAbsolute[key] && nutritionObj[maps.nutrientMappingAbsolute[key]]) {\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingAbsolute[key]]) - (Number(ingredientData.totalNutrients[key].quantity) / servings);\n            if (newNutrientValue < 0) newNutrientValue = 0;\n            newNutritionObj[maps.nutrientMappingAbsolute[key]] = newNutrientValue.toFixed(0);\n        }\n    });\n\n    return newNutritionObj;\n}\n\nexport function addNutrition(nutritionObj, ingredientData, RDI, servings) {\n    let newNutritionObj = { ...nutritionObj };\n\n    Object.keys(ingredientData.totalNutrients).forEach((key) => {\n        if (maps.nutrientMappingPercentage[key] && nutritionObj[maps.nutrientMappingPercentage[key]]) {\n            let ingredientPercentage = (Number(ingredientData.totalNutrients[key].quantity) / servings) / RDI[maps.nutrientMappingPercentage[key]] * 100;\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingPercentage[key]]) + ingredientPercentage;\n            newNutritionObj[maps.nutrientMappingPercentage[key]] = newNutrientValue.toFixed(0);\n        }\n\n        if (maps.nutrientMappingAbsolute[key] && nutritionObj[maps.nutrientMappingAbsolute[key]]) {\n            let newNutrientValue = Number(nutritionObj[maps.nutrientMappingAbsolute[key]]) + (Number(ingredientData.totalNutrients[key].quantity) / servings);\n            newNutritionObj[maps.nutrientMappingAbsolute[key]] = newNutrientValue.toFixed(0);\n        }\n    });\n\n    return newNutritionObj;\n}","import { drawPieChart } from \"./pie-chart.js\";\nimport { drawBarChart } from \"./bar-chart.js\";\nimport { capitalizeFirstLetter } from \"./util.js\";\nimport * as maps from \"./maps.js\";\nimport * as nutrition from \"./nutrition.js\";\nimport { fetchAPI } from \"../index.js\";\nimport { lastSearchParams } from \"../index.js\";\n\nconst nutritionId = '0cc0aea0';\nconst nutritionKey = '1e077dc53566f535c8e43010f6e729d5';\nconst searchResultDiv = document.querySelector('.search-result');\n\nexport function generateHTML(results) {\n    let newHTML = '';\n\n    results.map((result, index) => {\n        const caloriesPerServing = (result.recipe.calories / result.recipe.yield).toFixed(0);\n        const carbsPerServing = (result.recipe.totalNutrients.CHOCDF.quantity / result.recipe.yield).toFixed(0);\n        const proteinPerServing = (result.recipe.totalNutrients.PROCNT.quantity / result.recipe.yield).toFixed(0);\n        const fatPerServing = (result.recipe.totalNutrients.FAT.quantity / result.recipe.yield).toFixed(0);\n\n        newHTML += `\n            <div class=\"item\">\n                <img src=\"${result.recipe.image}\" alt=\"${result.recipe.label}\">\n\n                <div class=\"flex-container\">\n                    <h1 class=\"title\">${result.recipe.label}</h1>\n                    <a class=\"view-recipe-button\" href=\"${result.recipe.url}\" target=\"_blank\">View Recipe</a>\n                    <button class=\"modify-recipe-button\" data-recipe-id=\"${index}\">Modify Recipe</button>\n                </div>\n\n                <p class=\"item-data\">\n                    <strong>Calories/Serving:</strong> ${caloriesPerServing}\n                </p>\n                <p class=\"item-data\">\n                    <strong>Macronutrients/Serving:</strong> ${carbsPerServing}g carbohydrates, ${proteinPerServing}g protein, ${fatPerServing}g fat\n                </p>\n                <p class=\"item-data\">\n                    <strong>Servings:</strong> ${result.recipe.yield.toFixed(0)}\n                </p>\n            </div>\n        `;\n    });\n    \n    const oldButton = document.querySelector('.find-more-recipes-button');\n    if (oldButton) {\n        oldButton.remove();\n    }\n\n    newHTML += `\n    <button class=\"find-more-recipes-button\">Find More Recipes</button>\n    `;\n    \n    searchResultDiv.innerHTML = newHTML;\n\n    document.querySelector('.find-more-recipes-button').addEventListener('click', () => fetchAPI(lastSearchParams, true));\n    document.querySelector('.search-form').style.display = 'none';\n    document.querySelector('.back-to-search').style.display = 'block';\n    searchResultDiv.style.display = 'block';\n\n    document.querySelector('.back-to-search').addEventListener('click', () => {\n        document.querySelector('.search-form').style.display = 'block';\n        document.querySelector('.back-to-search').style.display = 'none';\n        searchResultDiv.style.display = 'none';\n        searchResultDiv.innerHTML = '';\n    });\n\n    document.querySelectorAll('.modify-recipe-button').forEach((button) => {\n        button.addEventListener('click', async (event) => {\n            const recipeId = event.target.dataset.recipeId;\n            const selectedRecipe = results[recipeId].recipe;\n            let ingredientObj = nutrition.getNutritionalInformation(selectedRecipe);\n            let nutritionObj = nutrition.createNutritionObject(selectedRecipe, maps.RDI);\n            var nutritionDiv = document.querySelector('.nutrition');\n            searchResultDiv.innerHTML = '';\n            var searchForm = document.querySelector('.search-form');\n            searchForm.innerHTML = '';\n            var ingredientsDiv = document.querySelector('.ingredients-list');\n            ingredientsDiv.innerHTML = '';\n\n            let tableHTML = `\n                <table>\n                    <tr>\n                        <th>Ingredient</th>\n                        <th>Weight (g)</th>\n                        <th>Actions</th>\n                    </tr>\n                `;\n\n            Object.entries(ingredientObj).forEach(([ingredient, weight]) => {\n                tableHTML += `\n                    <tr>\n                        <td>${capitalizeFirstLetter(ingredient)}</td>\n                        <td>${Math.floor(weight)}</td>\n                        <td>\n                            <button class=\"remove-button\">Remove Ingredient</button>\n                        </td>\n                    </tr>\n                `;\n            });\n\n            tableHTML += `\n                </table>\n                <div class=\"add-ingredient-div\">\n                    <input type=\"text\" id=\"ingredient-input\" placeholder=\"Enter ingredient\">\n                    <input type=\"number\" id=\"weight-input\" placeholder=\"Enter weight in grams\">\n                    <button class=\"add-button\">Add Ingredient</button>\n                </div>\n            `;\n\n            ingredientsDiv.innerHTML = tableHTML;\n\n\n            var caloriesDiv = document.createElement('h2');\n            caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n            nutritionDiv.append(caloriesDiv);\n\n            const nutrientsData = Object.keys(nutritionObj).map(key => ({ name: key, value: nutritionObj[key] }));\n            \n            const width = 500;\n            const height = 500;\n\n            let svgPie = d3.create(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n\n            var macronutrients = ['Protein', 'Fat', 'Carbohydrates'];\n            drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n            nutritionDiv.append(svgPie.node());\n                        \n            let svgBar = d3.create(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n            var micronutrients = ['Cholesterol', 'Sodium', 'Potassium', 'Magnesium', 'Calcium', 'Iron', 'Zinc', 'VitaminA', 'VitaminE', 'VitaminC', 'VitaminB6', 'VitaminB12', 'VitaminD', 'VitaminK'];\n            drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n            nutritionDiv.append(svgBar.node());\n\n            document.querySelectorAll('.remove-button').forEach(button => {\n                button.addEventListener('click', async function (e) {\n                    const ingredient = e.target.parentElement.parentElement.children[0].textContent;\n                    const weight = e.target.parentElement.parentElement.children[1].textContent;\n                    const response = await fetch(`https://api.edamam.com/api/nutrition-data?app_id=${nutritionId}&app_key=${nutritionKey}&nutrition-type=cooking&ingr=${ingredient}-${weight}g`);\n                    const data = await response.json();\n                    nutritionObj = nutrition.subtractNutrition(nutritionObj, data, maps.RDI, selectedRecipe.yield);\n                    caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n\n                    svgPie.selectAll(\"*\").remove();\n                    drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                    svgBar.selectAll(\"*\").remove();\n                    drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                    e.target.parentElement.parentElement.remove();\n                });\n            });\n\n            document.querySelector('.add-button').addEventListener('click', async () => {\n                const ingredientInput = document.querySelector('#ingredient-input').value;\n                const weightInput = document.querySelector('#weight-input').value;\n\n                if (!ingredientInput || !weightInput) {\n                    alert(\"Please fill both ingredient and weight fields.\");\n                    return;\n                }\n\n                const response = await fetch(`https://api.edamam.com/api/nutrition-data?app_id=${nutritionId}&app_key=${nutritionKey}&nutrition-type=cooking&ingr=${ingredientInput}-${weightInput}g`);\n                const data = await response.json();\n\n                nutritionObj = nutrition.addNutrition(nutritionObj, data, maps.RDI, selectedRecipe.yield);\n\n                const newTableRow = document.createElement('tr');\n                \n                newTableRow.innerHTML = `\n                    <td>${capitalizeFirstLetter(ingredientInput)}</td>\n                    <td>${Math.floor(weightInput)}</td>\n                    <td>\n                        <button class=\"remove-button\">Remove Ingredient</button>\n                    </td>\n                `;\n\n                document.querySelector('table').appendChild(newTableRow);\n\n                caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n\n                svgPie.selectAll(\"*\").remove();\n                drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                svgBar.selectAll(\"*\").remove();\n                drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                document.querySelectorAll('.remove-button').forEach(button => {\n                    button.addEventListener('click', async function (e) {\n                        const ingredient = e.target.parentElement.parentElement.children[0].textContent;\n                        const weight = e.target.parentElement.parentElement.children[1].textContent;\n                        const response = await fetch(`https://api.edamam.com/api/nutrition-data?app_id=${nutritionId}&app_key=${nutritionKey}&nutrition-type=cooking&ingr=${ingredient}-${weight}g`);\n                        const data = await response.json();\n\n                        nutritionObj = nutrition.subtractNutrition(nutritionObj, data, maps.RDI, selectedRecipe.yield);\n\n                        caloriesDiv.innerHTML = `Total Calories: ${nutritionObj.Calories}`;\n\n                        svgPie.selectAll(\"*\").remove();\n                        drawPieChart(svgPie, macronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                        svgBar.selectAll(\"*\").remove();\n                        drawBarChart(svgBar, micronutrients.map(n => ({ name: n, value: nutritionObj[n] })), width, height, nutritionObj);\n\n                        e.target.parentElement.parentElement.remove();\n                    });\n                });\n            });\n        });\n    });\n}","import * as generate from \"./scripts/generate-recipes.js\";\nimport { getSearchParams } from \"./scripts/search-params.js\";\n\nconst searchForm = document.querySelector('.search-form');\nconst appId = '9571bf1b';\nconst appKey = 'fd421218cb6bedd9fe774a93dd05e16e';\nexport let lastSearchParams;\nexport let recipes = [];\n\nsearchForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    lastSearchParams = getSearchParams(e.target);\n    fetchAPI(lastSearchParams, false);\n})\n\nexport async function fetchAPI(searchParams, append) {\n    let queryParameters = {\n        q: searchParams.searchQuery.length > 0 ? searchParams.searchQuery : undefined,\n        time: searchParams.minTime && searchParams.maxTime ? `${searchParams.minTime}-${searchParams.maxTime}`\n            : searchParams.minTime ? `${parseFloat(searchParams.minTime)}+`\n            : searchParams.maxTime ? `${searchParams.maxTime}`\n            : undefined,\n        calories: searchParams.minCalories && searchParams.maxCalories ? `${searchParams.minCalories}-${searchParams.maxCalories}`\n            : searchParams.minCalories ? `${searchParams.minCalories}+`\n            : searchParams.maxCalories ? `${searchParams.maxCalories}`\n            : undefined,\n        'nutrients[CHOCDF]': searchParams.minCarbs && searchParams.maxCarbs ? `${searchParams.minCarbs}-${searchParams.maxCarbs}`\n            : searchParams.minCarbs ? `${searchParams.minCarbs}+`\n            : searchParams.maxCarbs ? `${searchParams.maxCarbs}`\n            : undefined,\n        'nutrients[FAT]': searchParams.minFat && searchParams.maxFat ? `${searchParams.minFat}-${searchParams.maxFat}`\n            : searchParams.minFat ? `${searchParams.minFat}+`\n            : searchParams.maxFat ? `${searchParams.maxFat}`\n            : undefined,\n        'nutrients[PROCNT]': searchParams.minProtein && searchParams.maxProtein ? `${searchParams.minProtein}-${searchParams.maxProtein}`\n            : searchParams.minProtein ? `${searchParams.minProtein}+`\n            : searchParams.maxProtein ? `${searchParams.maxProtein}`\n            : undefined,\n        mealType: searchParams.mealType || undefined,\n        cuisineType: searchParams.cuisineType ? searchParams.cuisineType.toLowerCase() : undefined,\n        health: searchParams.dietRestrictions.length > 0 ? searchParams.dietRestrictions : undefined,\n        excluded: searchParams.excludedIngredients.length > 0 ? searchParams.excludedIngredients : undefined\n    }\n\n    let searchURL = Object.keys(queryParameters)\n        .filter(key => queryParameters[key] !== undefined)\n        .flatMap(key => {\n            if (Array.isArray(queryParameters[key])) {\n                return queryParameters[key].map(value => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n            } else {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(queryParameters[key])}`;\n            }\n        })\n        .join('&');\n\n    let fullURL = `https://api.edamam.com/api/recipes/v2?type=public&app_id=${appId}&app_key=${appKey}&random=true&${searchURL}`;\n    const response = await fetch(fullURL);\n    const data = await response.json();\n\n    if (append) {\n        recipes = recipes.concat(data.hits.filter(recipe => recipe.recipe.image));\n    } else {\n        recipes = data.hits.filter(recipe => recipe.recipe.image);\n    }\n\n    generate.generateHTML(data.hits);\n}\n\n","export function getSearchParams(form) {\n    let searchQuery = document.querySelector('input[type=\"text\"]').value;\n    let minTime = document.querySelector('#min-time-input').value;\n    let maxTime = document.querySelector('#max-time-input').value;\n    let minCalories = document.querySelector('#min-calories-input').value;\n    let maxCalories = document.querySelector('#max-calories-input').value;\n    let minCarbs = document.querySelector('#min-carbs-input').value;\n    let maxCarbs = document.querySelector('#max-carbs-input').value;\n    let minFat = document.querySelector('#min-fat-input').value;\n    let maxFat = document.querySelector('#max-fat-input').value;\n    let minProtein = document.querySelector('#min-protein-input').value;\n    let maxProtein = document.querySelector('#max-protein-input').value;\n    let mealType = document.querySelector('.meal-type-input').value;\n    let cuisineType = document.querySelector('.cuisine-input').value;\n    let dietRestrictions = Array.from(document.querySelectorAll('.dietary-restrictions input[type=\"checkbox\"]:checked')).map(el => el.value) || [];\n    let excludedIngredients = (document.querySelector('.ingredient-search-field').querySelector('input[type=\"text\"]').value.split(',').map(item => item.trim())).filter(item => item.length > 0) || [];\n\n    return {\n        searchQuery, minTime, maxTime, minCalories, maxCalories, minCarbs, maxCarbs, minFat, maxFat, minProtein, maxProtein, mealType, cuisineType, dietRestrictions, excludedIngredients\n    };\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","drawPieChart","svg","data","width","height","nutrientObj","append","attr","style","text","radius","Math","min","color","d3","scaleOrdinal","domain","map","d","name","range","schemeCategory10","pie","value","arc","innerRadius","outerRadius","arcs","selectAll","enter","centroid","parseFloat","toFixed","drawBarChart","filter","isNaN","x","scaleBand","padding","y","scaleLinear","max","g","axisLeft","axisBottom","bandwidth","capitalizeFirstLetter","string","charAt","toUpperCase","slice","RDI","nutrientMappingAbsolute","nutrientMappingPercentage","subtractNutrition","nutritionObj","ingredientData","servings","newNutritionObj","keys","totalNutrients","forEach","maps","ingredientPercentage","Number","quantity","newNutrientValue","nutritionId","nutritionKey","searchResultDiv","document","querySelector","searchForm","appId","appKey","lastSearchParams","recipes","async","fetchAPI","searchParams","queryParameters","q","searchQuery","length","undefined","time","minTime","maxTime","calories","minCalories","maxCalories","minCarbs","maxCarbs","minFat","maxFat","minProtein","maxProtein","mealType","cuisineType","toLowerCase","health","dietRestrictions","excluded","excludedIngredients","searchURL","flatMap","Array","isArray","encodeURIComponent","join","fullURL","response","fetch","json","concat","hits","recipe","image","results","newHTML","result","index","caloriesPerServing","yield","carbsPerServing","CHOCDF","proteinPerServing","PROCNT","fatPerServing","FAT","label","url","oldButton","remove","innerHTML","addEventListener","display","querySelectorAll","button","recipeId","event","target","dataset","selectedRecipe","ingredientObj","ingredients","ingredient","food","weight","nutrition","FASAT","FATRN","SUGAR","FIBTG","CHOLE","Cholesterol","NA","Sodium","K","Potassium","MG","Magnesium","VITA_RAE","VitaminA","TOCPHA","VitaminE","VITC","VitaminC","VITB6A","VitaminB6","VITB12","VitaminB12","VITD","VitaminD","VITK1","VitaminK","CA","Calcium","FE","Iron","ZN","Zinc","nutritionDiv","ingredientsDiv","tableHTML","entries","_ref","floor","caloriesDiv","createElement","Calories","svgPie","create","macronutrients","n","node","svgBar","micronutrients","e","parentElement","children","textContent","ingredientInput","weightInput","alert","newTableRow","appendChild","generate","preventDefault","from","el","split","item","trim"],"sourceRoot":""}